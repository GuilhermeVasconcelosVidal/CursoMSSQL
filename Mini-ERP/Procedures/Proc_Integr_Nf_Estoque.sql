--EXEC PROC_GERA_ESTOQUE
--DROP PROCEDURE PROC_INTEGR_NF_ESTOQUE
--CRIA플O PROC_INTEGR_NF_ESTOQUE
--TABELAS ORIGEM NOTA_FISCAL, NOTA_FISCAL_ITENS
--REUTILIZA PROCEDURE PROC_GERA_ESTOQUE
--ATUALIZA STATUS NOTA_FISCAL COMO [INTEGRADA_SUP]= S
--FASE 6 INTEGRA플O NFE COM ESTOQUE E/S

  CREATE PROCEDURE PROC_INTEGR_NF_ESTOQUE (@COD_EMPRESA INT,
                                           @NUM_NF INT,
										   @DATA_MOVTO DATE)

AS
 BEGIN
    SET NOCOUNT ON
--DECLARANDO VARIAVEIS
  DECLARE @TIP_MOV VARCHAR(1), -- E ENTRADA, S- SAIDA
          @COD_MAT VARCHAR(50),
		  @LOTE    VARCHAR(15),
		  @QTD     DECIMAL(10,2),
		  @ERRO_INTERNO INT,
		  --@I INT,
		  @TIP_NF CHAR(1),
		  @COD_MAT_AUX INT,
		  @QTD_LOTE DECIMAL(10,2),
		  @QTD_ATEND DECIMAL(10,2),
		  @SALDO DECIMAL(10,2),
		  @SALDO_AUX DECIMAL(10,2),
		  @TESTE CHAR(1),
		  @Msg VARCHAR(40)
--ATRIBUINDO VALORES
       --SET @I= 9
	   SET @QTD_ATEND= 0
	   SET @SALDO= 0


BEGIN TRANSACTION
--ESTRUTURA IF ELSE
--VERIFICANDO SE EXISTE DOCUMENTO
    IF (SELECT COUNT(*)
	    FROM NOTA_FISCAL
		WHERE COD_EMPRESA=@COD_EMPRESA 
		AND NUM_NF=@NUM_NF) = 0
	BEGIN
	    SET @ERRO_INTERNO=1;
	END
--VERIFICANDO SE EXISTE E JA ESTA INTEGRADO
  ELSE IF (SELECT TOP 1 A.NUM_NF
           FROM NOTA_FISCAL A
		   WHERE COD_EMPRESA=@COD_EMPRESA
		   AND A.NUM_NF=@NUM_NF
		   AND A.INTEGRADA_SUP='S')=@NUM_NF
  BEGIN 
       SET @ERRO_INTERNO=2;
  END

--VERIFICANDO SE OPERA플O DE ENTRADA EXECUTAR ENTRADA EM ESTOQUE
    ELSE IF (SELECT COUNT(*)
	         FROM NOTA_FISCAL A 
			 WHERE COD_EMPRESA=@COD_EMPRESA
			 AND A.NUM_NF=@NUM_NF
			 AND A.TIP_NF='E'
			 AND A.INTEGRADA_SUP='N')=1
	BEGIN
	    PRINT 'OPERACAO DE ENTRADA'
	--INICIA BEGIN TRY
	BEGIN TRY
	   DECLARE INTEGRA_ESTOQUE CURSOR FOR
	      SELECT A.TIP_NF,B.COD_MAT,
		  CONCAT(DATEPART(DAYOFYEAR,GETDATE()),'-',A.NUM_NF) LOTE,
		  --COMPOPSI플O CAMPO LOTE (DIA DO ANO MAIS NUMERO DA NF)
		 B.QTD
		 FROM NOTA_FISCAL A
		 INNER JOIN NOTA_FICAL_ITENS B
		 ON A.COD_EMPRESA=B.COD_EMPRESA
		 AND A.NUM_NF=B.NUM_NF
		 WHERE A.COD_EMPRESA=@COD_EMPRESA
		 AND A.NUM_NF=@NUM_NF
		 AND A.INTEGRADA_SUP='N' --INTEGRA NOTAS N=N홒

		 OPEN INTEGRA_ESTOQUE
		 FETCH NEXT FROM INTEGRA_ESTOQUE
		 INTO @TIP_MOV, @COD_MAT, @LOTE, @QTD
	
	WHILE @@FETCH_STATUS = 0 OR @@ERROR <> 0
	    BEGIN
	  --@TIPO_MOV, @COD_MAT, @LOTE, @QTD_MOV, @DATA_MOVTO
	  --EXECUTANDO PROCEDURE DE ESTOQUE COMO PARAMETROS DO CURSOR
	      EXEC PROC_GERA_ESTOQUE @COD_EMPRESA, @TIP_MOV, @COD_MAT, @LOTE, @QTD, @DATA_MOVTO

		   FETCH NEXT FROM INTEGRA_ESTOQUE
		   INTO @TIP_MOV,@COD_MAT,@LOTE,@QTD
	    END --END WHILE
	 --ATUALIZANDO STATUS DE INTEGRA플O NFE
  CLOSE INTEGRA_ESTOQUE
  DEALLOCATE INTEGRA_ESTOQUE
  END TRY --END TRY
      BEGIN CATCH
	       SET @ERRO_INTERNO = 3;
		   PRINT ''
		   PRINT 'ERRO OCORREU!'
		   PRINT 'MENSAGEM:' + ERROR_MESSAGE()
		   PRINT 'PROCEDURE' + ERROR_PROCEDURE()
		   
		   IF  (SELECT CURSOR_STATUS ('global','INTEGRA_ESTOQUE')) = 1
		   BEGIN
		       CLOSE INTEGRA_ESTOQUE
			   DEALLOCATE INTEGRA_ESTOQUE
           END
      END CATCH

END --END IF ELSE DE CONFERE NOTA DE ENTRADA NAO INTEGRADA

--VERIFICANDO SE A OPERA플O DE SAIDA  PARA EXECUTAR SAIDA DE ESTOQUE
   ELSE IF (SELECT COUNT(*)
            FROM NOTA_FISCAL A
			WHERE COD_EMPRESA=@COD_EMPRESA
			AND A.NUM_NF=@NUM_NF
			AND A.TIP_NF='S'
			AND A.INTEGRADA_SUP= 'N')=1
   BEGIN 
        PRINT 'OPERACAO DE SAIDA'
   BEGIN TRY
   --CURSOR
   DECLARE LE_NFE_VENDA CURSOR FOR

   SELECT A.NUM_NF, A.TIP_NF,B.COD_MAT, B.QTD
   FROM NOTA_FISCAL A
   INNER JOIN NOTA_FICAL_ITENS B
   ON A.COD_EMPRESA=B.COD_EMPRESA
   AND A.NUM_NF=B.NUM_NF
   WHERE A.COD_EMPRESA=@COD_EMPRESA
   AND A.INTEGRADA_SUP='N'
   AND A.NUM_NF=@NUM_NF
   AND A.TIP_NF ='S'
   ORDER BY B.COD_MAT
   --LENDO CURSOR
OPEN LE_NFE_VENDA
FETCH NEXT FROM LE_NFE_VENDA
    --INSERINDO VALOR NA VARIAVEL
	    INTO @NUM_NF, @TIP_NF, @COD_MAT, @QTD
	--INICIANDO REPETI플O
	    WHILE @@FETCH_STATUS = 0
		BEGIN
		IF (SELECT ISNULL(QTD_SALDO,0)QTD_SALDO 
		    FROM ESTOQUE
			WHERE COD_EMPRESA=@COD_EMPRESA
			AND COD_MAT=@COD_MAT)<@QTD
	    OR
		   (SELECT ISNULL(QTD_SALDO,0)QTD_SALDO 
		    FROM ESTOQUE
			WHERE COD_EMPRESA=@COD_EMPRESA
			AND COD_MAT=@COD_MAT) IS NULL 
		BEGIN	
		  SET @ERRO_INTERNO=4
		  PRINT 'PASSEI AQUI SALDO'
		  GOTO ERRO4
		END
		ELSE
		BEGIN
      --APRESENTANDO VALORES **INFORMATIVO
	  SELECT @NUM_NF NOTA, @TIP_NF TIP_NF,@COD_MAT COD_MAT, @QTD QTD
 --DECLARANDO CURSOR PARA LER ESTOQUE COM MATERIAIS DA NOTA PARA BAIXA EM ESTOQUE
   DECLARE INTEGRA_NFE_VENDA CURSOR FOR
        
		SELECT C.COD_MAT, C.QTD_LOTE, C.LOTE
		FROM ESTOQUE_LOTE C
		WHERE COD_EMPRESA=@COD_EMPRESA
		AND C.COD_MAT=@COD_MAT
		AND C.QTD_LOTE> 0
	    ORDER BY C.COD_MAT, C.LOTE
  --ABRINDO CURSOR
    OPEN INTEGRA_NFE_VENDA
	    FETCH NEXT FROM INTEGRA_NFE_VENDA
  --INSERINDO VALOR NAS VARIAVEIS
        INTO @COD_MAT,@QTD_LOTE,@LOTE
  --ATRIBUINDO VALOR NAS VARIAVEIS
          SET @SALDO=@QTD;
		  SET @SALDO_AUX=@SALDO